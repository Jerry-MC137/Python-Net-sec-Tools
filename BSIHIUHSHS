 @staticmethod
    def sniff(host):
        if os.name == 'nt':
            socket_protocol = socket.IPPROTO_IP
        else:
            socket_protocol = socket.IPPROTO_ICMP

        sniffer = socket.socket(socket.AF_INET,
                                socket.SOCK_RAW, socket_protocol)

        sniffer.bind((host, 0))
        sniffer.setsockopt(socket.IPPROTO_IP, socket.IP_HDRINCL, 1)

        if os.name == 'nt':
            sniffer.ioctl(socket.SIO_RCVALL, socket.RCVALL_ON)

        try:
            while True:
                # READ PACKET
                raw_buffer = sniffer.recvfrom(65535)[0]
                # CREATE AN IP HEADER FROM THE FIRST 20 BYTES
                ip_header = IP(raw_buffer[0:20])
                # PRINT THE DETECTED PROTOCOL AND HOSTS
                print('Protocol: %s %s -> %s' % (ip_header.protocol,
                                                 ip_header.src_address,
                                                 ip_header.dst_addres))
        except KeyboardInterrupt:
            # IF WE'RE ON WINDOWS TURN OFF PROMISCUOUS MODE
            if os.name == 'nt':
                sniffer.ioctl(socket.SIO_RCVALL, socket.RCVALL_OFF)
            sys.exit()